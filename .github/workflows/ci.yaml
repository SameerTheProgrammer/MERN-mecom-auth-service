name: CI
on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main
jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest
        # if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run eslint
            - name: Run prettier check
              run: npm run prettier:check
            - name: Run prettier fix
              run: npm run prettier:fix
            - name: Test and coverage
              run: npm run test
              env:
                  DB_HOST: ${{ secrets.TEST_DB_HOST }}
                  DB_PORT: ${{ secrets.TEST_DB_PORT }}
                  DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}
                  DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
                  DB_NAME: ${{ secrets.TEST_DB_NAME }}

                  REFRESH_JWT_SECRET_KEY: ${{ secrets.TEST_REFRESH_JWT_SECRET_KEY }}
                  ACCESS_TOKEN_EXPIRY_HOUR: ${{secrets.TEST_ACCESS_TOKEN_EXPIRY_HOUR}}
                  REFRESH_TOKEN_EXPIRY_DAYS: ${{secrets.TEST_REFRESH_TOKEN_EXPIRY_DAYS}}
                  TOKEN_ISSUER: ${{secrets.TEST_TOKEN_ISSUER}}

                  ACCESS_COOKIE_MAXAGE_HOUR: ${{secrets.TEST_ACCESS_COOKIE_MAXAGE_HOUR}}
                  REFRESH_COOKIE_MAXAGE_DAYS: ${{secrets.TEST_REFRESH_COOKIE_MAXAGE_DAYS}}
                  COOKIE_DOMAIN: ${{secrets.TEST_COOKIE_DOMAIN}}

                  JWKS_URI: ${{ secrets.TEST_JWKS_URI }}
                  PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
            - name: Build-ts
              run: npm run build
            - name: SonarCloud Scan
              uses: SonarSource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: sameertheprogrammer/mecom-auth-service # sameertheprogrammer/mecom-auth-service:build-2
            IMAGE_TAG: build-${{ github.run_number }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker/prod/Dockerfile .
            - name: Push Docker image to Docker Hub
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
